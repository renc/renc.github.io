<!DOCTYPE html>
<html lang="en"
>
<head>
    <title> - 阿can's  blog</title>
    <!-- Using the latest rendering mode for IE -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">




    <meta name="author" content="renc" />
    <meta name="keywords" content="" />

    <!-- Open Graph tags -->
        <meta property="og:site_name" content="阿can's  blog" />
        <meta property="og:type" content="website"/>
        <meta property="og:title" content="阿can's  blog"/>
        <meta property="og:url" content=""/>
        <meta property="og:description" content="阿can's  blog"/>


    <!-- Bootstrap -->
        <link rel="stylesheet" href="/theme/css/bootstrap.min.css" type="text/css"/>
    <link href="/theme/css/font-awesome.min.css" rel="stylesheet">

    <link href="/theme/css/pygments/native.css" rel="stylesheet">
    <link rel="stylesheet" href="/theme/css/style.css" type="text/css"/>


</head>
<body>

<div class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="/" class="navbar-brand">
阿can's  blog            </a>
        </div>
        <div class="collapse navbar-collapse navbar-ex1-collapse">
            <ul class="nav navbar-nav">
                        <li class="active">
                            <a href="/category/.html"></a>
                        </li>
                        <li >
                            <a href="/category/book.html">Book</a>
                        </li>
                        <li >
                            <a href="/category/computer-graphics.html">Computer graphics</a>
                        </li>
                        <li >
                            <a href="/category/programming.html">Programming</a>
                        </li>
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li><a href="/archives.html"><i class="fa fa-th-list"></i><span class="icon-label">Archives</span></a></li>
            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </div>
</div> <!-- /.navbar -->

<div class="container">
    <div class="row">
        <div class="col-sm-9">

            <article>
                <h2><a href="/Build myblog using pelican.html">Build myblog using pelican</a></h2>
                <div class="summary"><p>都不知道这是第几次又想建一个自己blog来host那些笔记了, 相比于之前的blogger, wordpress, 这次用pelican and python来搞...   </p>
<h2>环境:</h2>
<ul>
<li>python 2.7, withn pip, easy_install        </li>
<li>pelican        <br />
<img alt="Alt text" src="data/2014-08-31-pelican_output.PNG" title="output" /><br />
注意上面的起始目录是E:\Temp\myblog&gt; 
我试过别的起始目录是E:\Temp\myblog\context&gt; 就发生错误了. 
进入output目录, 打开index.html就可以看到blog了。这里我没有用到make html命令哦.  </li>
</ul>
<h2>遇到的problems:</h2>
<ul>
<li>设置图片目录的路径.  <br />
我的图片都是文档.md目录下的data目录, 例如folderA/xxx.md, folderA/data/yyy.PNG. 在pelican这里, 我想保持这样的结构, folderA 相当于 context目录, 目的是blog的内容(文档和图片)已经可以放到某个folderA里面, 然后要用pelican来build这个blog的时候, 直接把folderA目录里面的所有东西copy到context目录下就ok了.<br />
但是pelican默认是把图片放到blogFolder/image目录 ...</li></ul>
                    <a class="btn btn-default btn-xs" href="/Build myblog using pelican.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/build simple ui using pySide.html">build simple ui using pySide</a></h2>
                <div class="summary"><p>记录一下做UI prototype时候遇到的新概念 </p>
<blockquote>
<p>life is short, use python. </p>
</blockquote>
<p>早有耳闻, 一试果然不凡. 
安装Qt 4.8.X, 安装pySide (how? 具体看其主页), 然后新建file.py, 敲几行pySide代码, 然后command line里面python file.py立刻就出ui效果了. 省却了ide / c++代码 / 链接设置 / 反复修改反复编译的麻烦.  <br />
事情的缘由是, 最近要参与用python快速做一个ui的prototype, 本来主程序M里面就有Qt+pySide, 所以连安装都不需要, 直接改py文件就得到ui结果, 真快. 于是就缺学几下python了. </p>
<p>example 1. To define the style sheet 样式 of a button.  <br />
<img alt="Alt text" src="data/2014-08-25_qtButtonStyleSheet.png" title="output" />   </p>
<div class="highlight"><pre><span class="n">QPushButton</span> <span class="p">{</span>
    <span class="nl">border:</span> <span class="mi">2 ...</span></pre></div>
                    <a class="btn btn-default btn-xs" href="/build simple ui using pySide.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Python Basis 基础笔记.html">Python Basis 基础笔记</a></h2>
                <div class="summary"><p>新接触python programming, 记录一些基础.        </p>
<p>Batteries Included. 立马就可以使用的. 
Installizaton </p>
<hr />
<p>download 2.7 from python website and install at C:\Python27;              <br />
download Anaconda 2.1.0 install at E:\Anaconda;                  <br />
<img alt="Alt text" src="data/python_2014-11-03_version.PNG" title="output" />         <br />
看来两者并不冲突.                    </p>
<p>这是从Anaconda里面起来的Spyder IDE:<br />
<img alt="Alt text" src="data/python_2014-11-03_Spyder_IDE.PNG" title="output" />        </p>
<h2>Variables and Data</h2>
<p>A variable is a name that points to some specific data type. 不允许声明一个变量而没有=赋值. 
contents = 6;                 <br />
print ...</p>
                    <a class="btn btn-default btn-xs" href="/Python Basis 基础笔记.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/name on a book.html">Name on a book</a></h2>
                <div class="summary"><p>记录一次参与翻译一本外文书的过程, 过程有点累, 结果有点甜.   </p>
<blockquote>
<p>you know, it is funny that people do not care your name, until you are in trouble. 
-- 美剧&lt;疑犯追凶&gt;第一集里面的话, 类似而已哦. </p>
</blockquote>
<p>去参与翻译一本书, 可以出现在书店书架上的, 还提到你的名字, 是不是很cool?    </p>
<p>昨天看到email, 被告知我有份参与的书终于上架了, "在各大网店都有售。但是样书会比较慢" 里面上google一下，果然在amazon.cn等都找到了: </p>
<div class="highlight"><pre><span class="err">交互式程序设计（第</span><span class="mi">2</span><span class="err">版）</span>                                                               
 <span class="o">~</span> <span class="n">Joshua</span> <span class="n">Noble</span> <span class="p">(</span><span class="err">作者</span><span class="p">),</span> <span class="err">毛顺兵</span> <span class="p">(</span><span class="err">译者</span><span class="p">),</span> <span class="err">张婷婷</span> <span class="p">(</span><span class="err">译者</span><span class="p">)</span>                
<span class="err">出版社</span><span class="o">:</span> <span class="err">机械工业出版社</span><span class="p">;</span> <span class="p">(</span><span class="mi">2014</span><span class="err">年 ...</span></pre></div>
                    <a class="btn btn-default btn-xs" href="/name on a book.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/conflict by duplicated variables.html">conflict by duplicated variables</a></h2>
                <div class="summary"><p>用多于一个变量来表示一个状态, 变量之间很容易不一致呢.      </p>
<blockquote>
<p>conflict  </p>
</blockquote>
<p>假如我们要描述以下这个状态:        <br />
在一次mouse click的picking中, 我们给出了pick的范围, 一个rectangle, 然后要标记是否只要pick一个物体object就够了, 还是pick所有在rectangel下面的物体.  </p>
<p>当假如我们只要pick到一个物体就够了, 那可能在for里面, 一旦找到某一个物体有效, 我们就可以返回, 退出pick过程了. 也就是我们只要pick到第一个有效物体就ok了, 而不考虑这个pick到的物体是否距离mouse click的点最近.   </p>
<p>那么, 要记录这个状态, 我们看下面的实现:     </p>
<div class="highlight"><pre><span class="n">class</span> <span class="n">XViewContext</span>            
<span class="p">{</span>               
<span class="nl">public:</span>                           
    <span class="n">PickingResult</span> <span class="n">pick</span><span class="p">(...);</span>                               
    <span class="kt">void</span> <span class="nf">setPickSingle</span><span class="p">(</span><span class="kt">bool</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="n">m_bPickSingle</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span> <span class="p">};</span>                      
    <span class="kt">bool</span> <span class="n">pickSingle</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">m_bPickSingle</span><span class="p">;</span> <span class="p">};</span>                
<span class="nl">private:</span>               
    <span class="kt">bool</span> <span class="n">m_bPickSingle</span><span class="p">;</span>                   
<span class="p">};</span>                           
<span class="n">PickingResult</span> <span class="n">XViewContext</span><span class="o">::</span><span class="n">pick</span><span class="p">(...)</span>           
<span class="p">{</span>                    
    <span class="p">...</span>                                
    <span class="k">if</span> <span class="p">(</span> <span class="n">pickSingle</span><span class="p">()</span> <span class="p">)</span> <span class="p">...;</span>                 
    <span class="k">else</span> <span class="p">...;</span>         
<span class="p">}</span>          
</pre></div>


<p>在这实现中, 是否要pick单一个物体的状态作为data member inside ...</p>
                    <a class="btn btn-default btn-xs" href="/conflict by duplicated variables.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Undo and Redo.html">Undo and Redo</a></h2>
                <div class="summary"><p>Undo and Redo 已经遇到很多次了, 记录一下想法.     </p>
<blockquote>
<p>So we beat on, boats against the current, borne back ceaselessly into the past. -- The Great Gatsby<br />
所以我们不停地往前划，逆流而上，回到无穷无尽的过去。《了不起的盖茨比》  </p>
</blockquote>
<p>一个程序假如连undo/redo都没有, 那基本上不是给人用的, 可能只能算是demo.</p>
<h2>Undo/Redo</h2>
<p>用windows/paint画图工具做例子就很直观啦. </p>
<p>case 1. 假如操作次序是: 画一笔A, 再画一笔B;
undo 一次就是剩下A; undo 第二次就是空;
redo 一次就是增加A; redo第二次就是恢复到A B; 
这个case的特点是undo到底了，再redo到底. 没有undo的时候又夹着redo ...</p>
                    <a class="btn btn-default btn-xs" href="/Undo and Redo.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Position Transfromation from 2d world to window screen.html">Position Transfromation from 2d world to window screen</a></h2>
                <div class="summary"><p>工作中遇到一个问题, 坐标映射。A 2d world is rendering in a window, user can mouse click on the window, how to find the position at 2d world corresponding to this mouse positon?     </p>
<h2>Background背景</h2>
<p>工作中遇到一个问题, 坐标映射。A 2d world is rendering in a window, user can mouse click on the window, how to ...</p>
                    <a class="btn btn-default btn-xs" href="/Position Transfromation from 2d world to window screen.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/why game developers keep getting laid off.html">why game developers keep getting laid off</a></h2>
                <div class="summary"><p>翻译了一下why game developers keep getting laid off这个文章. 里面有些观点是挺有意思的.   </p>
<h2>引言</h2>
<p>在Hacker News上看到此文, 
Why Game Developers Keep Getting Laid Off
by Jason Schreier 
http://kotaku.com/why-game-developers-keep-getting-laid-off-1583192249 
I enjoyed this article, thx. 稍微摘录和翻译一下. </p>
<h2>Why does this happen so often?</h2>
<p>...
为什么裁掉一些开发，几个月之后又要重新请人？这个想法好像有点傻啊。但是这种事情却常常发生。根据Sony的某前员工，其中的解释很简单：在开发的前期(游戏的概念和设计是在这期间完成)，不需要那么多人，所以发行商就不养人。
...</p>
<h2>A deadline's ...</h2>
                    <a class="btn btn-default btn-xs" href="/why game developers keep getting laid off.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/build error from line ending.html">build error from line ending</a></h2>
                <div class="summary"><p>Build error, 具体是error C4335: Mac file format detected: please convert the source file to either DOS or UNIX format怎么办呢？ </p>
<p>故事的开端是checkin了一个.cpp，当然本地是build过的，但是server端那边反馈说build error, 具体是
error C4335: Mac file format detected: please convert the source file to either DOS or UNIX format</p>
<p>怎么办呢？当然是查看一下到底是那个.cpp文件的line ending是什么东西，然后改成合适的就ok了. </p>
<p>下面截图显示改之前是CR+LF, 改之后是LF的 ...</p>
                    <a class="btn btn-default btn-xs" href="/build error from line ending.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/algo - counting inversions.html">algo - counting inversions</a></h2>
                <div class="summary"><p>算法练习: counting inversions       </p>
<h2>Background</h2>
<p>Given an array, say [1, 3, 5, 2, 4, 6], to count the inversions.
What is an inversion ?
if (i &lt; j) but arr[i] &gt; arr[j]. 例如上面的(3, 2), 3在2的前面, 但是3&gt;2, 构成一个inversion. 这个例子中一共三个inversions(3, 2) (5, 2) (5, 4). </p>
<p>这个计算有什么用呢? 我是[Algorithms: Design and Analysis ...</p>
                    <a class="btn btn-default btn-xs" href="/algo - counting inversions.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/partio.html">partio</a></h2>
                <div class="summary"><p>本来是在找point clould读入的资信, 如point cloud to maya, 遇到partio这open souce project, 读读它的代码应该能学到东西, 于是故事就开始了.               </p>
<h2>引言</h2>
<p>本来是在找point clould读入的资信, 如point cloud to maya, 遇到partio这open souce project from
Disney Animation, 读读它的代码应该能学到东西, 于是故事就开始了.<br />
“The goal of Partio is to provide a unified interface akin to unified image libraries that makes it easier to load, save, and manipulate ...</p>
                    <a class="btn btn-default btn-xs" href="/partio.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Vector based containers.html">Vector based containers</a></h2>
                <div class="summary"><p>在代码中std::vector经常被用到吧? 因为它很容易用, 只管往里面塞东西就ok了. 但是用!=用得好, 而对它的了解又是否足够把它用好呢...下面是在阅读参考文章时候的笔记.  </p>
<h2>引言</h2>
<h1>Using STL Vectors</h1>
<p>在代码中std::vector经常被用到吧? 因为它很容易用, 只管往里面塞东西就ok了. 
但是用!=用得好, 而对它的了解又是否足够把它用好呢...下面是在阅读参考文章时候的笔记. </p>
<h2>Prefer vector over list</h2>
<p>比较 std::vector 和 std::list, 其中一个特定是, vector的内存是连续的(contiguous buffers), 还可以避免avoid内存动态分配memory allocations和四散的访问scattered access.  这些都是优势. </p>
<p>这里发散一下，以前在用Qt 4.8的时候(以后Qt 5可能有变)，就有QVector, QList, QLinkedList，它们的区别也有意思。其中QVector跟std::vector类似 ...</p>
                    <a class="btn btn-default btn-xs" href="/Vector based containers.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Pointer to Member Function.html">Pointer to Member Function</a></h2>
                <div class="summary"><p>function pointer是知道的, 如</p>
<div class="highlight"><pre><span class="kt">int</span> <span class="nf">max</span><span class="p">(</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="p">};</span>

<span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">pFtor</span><span class="p">)(</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span> <span class="p">)</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">max</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">iResult</span> <span class="o">=</span> <span class="n">pFtor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span> 

<span class="n">or</span>

<span class="k">typedef</span> <span class="nf">int</span><span class="p">(</span><span class="o">*</span><span class="n">FtorType</span><span class="p">)(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">);</span> 
<span class="n">FtorType</span> <span class="n">pFtor</span><span class="p">;</span> 
<span class="n">pFtor</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">max</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">iResult</span> <span class="o">=</span> <span class="n">pFtor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</pre></div>


<p>但是当看到类似以下代码时候还是恐惧了一下: </p>
<div class="highlight"><pre><span class="n">class</span> <span class="n">Tool</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">doA</span><span class="p">(</span><span class="n">ArgumentType</span> <span class="o">&amp;</span><span class="p">);</span>
    <span class="kt">int</span> <span class="nf">doB</span><span class="p">(</span><span class="n">ArgumentType</span> <span class="o">&amp;</span><span class="p">);</span> 
<span class="p">};</span> 
<span class="k">typedef</span> <span class="nf">int</span><span class="p">(</span><span class="n">Tool</span><span class="o">::*</span><span class="n">MemberFunctionPtr</span><span class="p">)(</span><span class="n">ArgumentType</span> <span class="o">&amp;</span><span class="p">);</span>


<span class="n">Tool</span> <span class="n">toolObj ...</span></pre></div>
                    <a class="btn btn-default btn-xs" href="/Pointer to Member Function.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/In the middle of time and space.html">In the middle of time and space</a></h2>
                <div class="summary"><p>刚发生了一个有意思的事情, 5月9号16:40</p>
<p>小伙C说了一段话;
小伙B回答了一段话;</p>
<p>小伙C是在北美西海岸, 跟我们差16小时; 
小伙B是在英国.</p>
<p>那么C大致是5月8号深夜, B可能是9号早上.</p>
<p>过去和未来的对话，我们夹在时空中间，旁观.....</p>
                    <a class="btn btn-default btn-xs" href="/In the middle of time and space.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Example of code conventions.html">Example of code conventions</a></h2>
                <div class="summary"><p>刚看到如下代码:</p>
<div class="highlight"><pre><span class="c1">// NvGLModel.h from nvidia samples </span>

    <span class="n">nv</span><span class="o">::</span><span class="n">vec3f</span> <span class="n">m_center</span><span class="p">;</span> <span class="c1">///&lt; The computed center of the bounding box of the app</span>

<span class="nl">private:</span>
    <span class="n">NvModel</span> <span class="o">*</span><span class="n">model</span><span class="p">;</span>
    <span class="n">GLuint</span> <span class="n">model_vboID</span><span class="p">,</span> <span class="n">model_iboID</span><span class="p">;</span>
    <span class="n">nv</span><span class="o">::</span><span class="n">vec3f</span> <span class="n">m_minExtent</span><span class="p">,</span> <span class="n">m_maxExtent</span><span class="p">,</span> <span class="n">m_radius</span><span class="p">;</span>
</pre></div>


<p>觉得别扭，主要是有些成员变量data member用来m_，而有些不用，不统一。所谓的taste?</p>
<p>btw, 反例的英文原来是: counter example; negative example </p>
                    <a class="btn btn-default btn-xs" href="/Example of code conventions.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Picking with OpenGL.html">Picking with OpenGL</a></h2>
                <div class="summary"><blockquote>
<p>If you have choices, choose the best. If you have no choice, do the best. 如果有选择，那就选择最好的；如果没有选择，那就努力做到最好。</p>
</blockquote>
<h1>Picking with OpenGL</h1>
<p>在3d软件提供交互的时候，例如先选择了某个vertex或者某个face，然后去操作这个被选中的东西。如在maya里面很多工具(maya里面把context==tool?)都是先pick the manipulator, drag the manipulator, to update the attributes of the node (the selection list). 第一步就是要选中mouse底下的东西，这是怎么做到的呢?</p>
<p>其实一开始我想到的方法ray intersection的方法，
approach 0 ...</p>
                    <a class="btn btn-default btn-xs" href="/Picking with OpenGL.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/choose the overrided function.html">choose the overrided function</a></h2>
                <div class="summary"><p>In class hierarchy, if functions are overrided by some subclass, which one will be invoked?</p>
                    <a class="btn btn-default btn-xs" href="/choose the overrided function.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Do and redo are similiar.html">Do and redo are similiar</a></h2>
                <div class="summary"><p>在学maya/MPxCommand, 当一个操作需要支持undo/redo的时候，用户操作的次序可能是: 
- do sth -&gt; undo it, or 
- do sth -&gt; undo it -&gt; redo it;
在实现的时候会发现do sth 跟 redo sth的代码基本一样啊，那当然想写一个都被do and redo调用的函数就好了，避免代码重复嘛。</p>
<p>maya/devkit的例子所使用的方法是:</p>
<div class="highlight"><pre><span class="c1">//code  </span>
<span class="c1">// inside class CommandXY </span>
<span class="k">virtual</span> <span class="n">bool</span> <span class="n">isUndoable</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">true</span> <span class="k">or</span> <span class="n">false</span><span class="p">;</span> <span class="p">}</span>
<span class="k">virtual</span> <span class="n">MStatus</span> <span class="n">doIt</span><span class="p">(</span> <span class="k">const</span> <span class="n">MArglist</span> <span class="o">&amp;</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// parse the argument list;</span>
    <span class="c1">// do some ...</span></pre></div>
                    <a class="btn btn-default btn-xs" href="/Do and redo are similiar.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/How to build a plugin system.html">How to build a plugin system</a></h2>
                <div class="summary"><p>Applications normally support custom plugins, how to do that?<br />
很多软件都提供了API给customer, 可以写plugin来扩展原来的程序. </p>
<p>例如mudbox和maya. 从mudbox的API来看，一般可以实现
- 自定义operation, support undo and redo;
- 自定义某种brush (operation); 
- 继承实现某个类，代替原有的那个. 例如map extraction? 
当前接触到的maya api不多，知道plugin可以实现context and manipulator.</p>
<p>问题就来了, 一个简单的plugin system是怎么设计和实现的呢? </p>
<p>case 1: 
Reference: Using Dynamic Link Libraries (DLL) to Create Plug-Ins, by Jeremiah van Oosten. 
http://3dgep ...</p>
                    <a class="btn btn-default btn-xs" href="/How to build a plugin system.html">more ...</a>
                </div>
            </article>
            <hr/>
            <article>
                <h2><a href="/Maya programming node.html">Maya Programming Node</a></h2>
                <div class="summary"><p>学maya时候有些新概念要记录一下，否则忘得快. </p>
<p>先在一个新场景里面拖一个多边形球polygon sphere出来,    <br />
<img alt="transfrom and shape node" src="data/2014-04-01-transfer_shape_node.png" title="output" />
打开Outline窗口, 看到一个pShere1, 选择Display/Shapes, 又看到pShere1下面还有一个pSphereShape1. 而在hypergraph: connection 窗口看到一共四个东西, 其中两个就是上面的pSphere1 and pSphereShape1, 而且其中三个是有连接关系的。从左到右它们分别是:    <br />
+ polySphere1: 控制参数, 例如半径radius, axis/height上的布线密度等;  <br />
+ pSphereShape1: 这个就是实际的shape node, 形状.                  <br />
+ initialShadingGroup: 用于画这个球的.               <br />
+ pSphere1: transform node, 决定了球在空间位置.                 </p>
<div class="highlight"><pre><span class="n">import</span> <span class="n">maya</span><span class="p">.</span><span class="n">cmds</span><span class="p">;</span> 

<span class="n">maya</span><span class="p">.</span><span class="n">cmds</span><span class="p">.</span><span class="n">polySphere</span><span class="p">()</span>                  <span class="err">#</span> <span class="err">用</span><span class="n">script</span><span class="err">建一个球</span> 
<span class="cp"># Result: [u&#39;pSphere2&#39;, u&#39;polySphere2&#39;] # 返回就是transform node, shape node ...</span></pre></div>
                    <a class="btn btn-default btn-xs" href="/Maya programming node.html">more ...</a>
                </div>
            </article>
            <hr/>

        <ul class="pagination">
                <li class="prev"><a href="/tag\.html">&laquo;</a>
                </li>
                    <li class=""><a
                            href="/tag/.html">1</a></li>
                    <li class="active"><a
                            href="/tag/2.html">2</a></li>
                    <li class=""><a
                            href="/tag/3.html">3</a></li>
                <li class="next"><a
                        href="/tag\.html3">&raquo;</a></li>
        </ul>
        </div>
        <div class="col-sm-3" id="sidebar">
            <aside>

<section class="well well-sm">
    <ul class="list-group list-group-flush">
            <li class="list-group-item"><h4><i class="fa fa-home fa-lg"></i><span class="icon-label">Social</span></h4>
              <ul class="list-group" id="social">
                <li class="list-group-item"><a href="#"><i class="fa fa-you-can-add-links-in-your-config-file-square fa-lg"></i> You can add links in your config file</a></li>
                <li class="list-group-item"><a href="https://github.com/renc"><i class="fa fa-github-square fa-lg"></i> Github</a></li>
              </ul>
            </li>



            <li class="list-group-item"><a href="/"><h4><i class="fa fa-tags fa-lg"></i><span class="icon-label">Tags</span></h4></a>
                <ul class="list-group " id="tags">
                    <li class="list-group-item tag-1">
                        <a href="/tag/.html">
                            
                        </a>
                    </li>
                    <li class="list-group-item tag-2">
                        <a href="/tag/maya.html">
                            maya
                        </a>
                    </li>
                    <li class="list-group-item tag-3">
                        <a href="/tag/algo.html">
                            Algo
                        </a>
                    </li>
                    <li class="list-group-item tag-3">
                        <a href="/tag/python.html">
                            Python
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/glsl.html">
                            GLSL
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/reading.html">
                            reading
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/mel.html">
                            Mel
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/opengl.html">
                            OpenGL
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/shader.html">
                            Shader
                        </a>
                    </li>
                    <li class="list-group-item tag-4">
                        <a href="/tag/qt.html">
                            qt
                        </a>
                    </li>
                </ul>
            </li>
    <li class="list-group-item"><h4><i class="fa fa-external-link-square fa-lg"></i><span class="icon-label">Links</span></h4>
      <ul class="list-group" id="links">
        <li class="list-group-item">
            <a href="http://getpelican.com/" target="_blank">
                Pelican
            </a>
        </li>
        <li class="list-group-item">
            <a href="#" target="_blank">
                You can modify those links in your config file
            </a>
        </li>
      </ul>
    </li>
    </ul>
</section>
            </aside>
        </div>
    </div>
</div>
<footer>
   <div class="container">
      <hr>
      <div class="row">
         <div class="col-xs-10">&copy; 2014 renc
            &middot; Powered by <a href="https://github.com/DandyDev/pelican-bootstrap3" target="_blank">pelican-bootstrap3</a>,
            <a href="http://docs.getpelican.com/" target="_blank">Pelican</a>,
            <a href="http://getbootstrap.com" target="_blank">Bootstrap</a>         </div>
         <div class="col-xs-2"><p class="pull-right"><i class="fa fa-arrow-up"></i> <a href="#">Back to top</a></p></div>
      </div>
   </div>
</footer>
<script src="/theme/js/jquery.min.js"></script>

<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="/theme/js/bootstrap.min.js"></script>

<!-- Enable responsive features in IE8 with Respond.js (https://github.com/scottjehl/Respond) -->
<script src="/theme/js/respond.min.js"></script>

</body>
</html>